{"version":2,"kind":"Notebook","sha256":"0a7b44c6cbf64e43703fb365cf8e5ed708ee789e499a38cc21e42a2aec467f7f","slug":"notebooks.ucla-data-access","location":"/notebooks/UCLA_data_access.ipynb","dependencies":[],"frontmatter":{"title":"Reanalysis Data Access","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"The SnowPit Community","given":"The SnowPit","family":"Community"},"name":"The SnowPit Community","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/SnowEx/snow-cookbook","copyright":"2025","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/SnowEx/snow-cookbook/blob/main/notebooks/UCLA_data_access.ipynb","exports":[{"format":"ipynb","filename":"UCLA_data_access.ipynb","url":"/snow-cookbook/build/UCLA_data_access-67a124f54a139ad0d31dfdb3bf639d3d.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This workbook is to access the Western United States snow reanalysis data set, as developed by UCLA. Normally, the data is provided as PNG or netCDF files, and it is not cloud-optimized. So, we will need to download the data into a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ifFu6qx6Yo"},{"type":"inlineCode","value":"tmp/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LzwI8qt3tL"},{"type":"text","value":" folder, as a direct access will be computationally inefficient.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zH5CgJTRbs"}],"key":"UZEW8DwVAb"}],"key":"mcqFe6z11t"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import xarray as xr\nimport earthaccess\nimport boto3\nimport cartopy.crs as ccrs\nimport cartopy.feature as cfeature\nimport matplotlib.pyplot as plt\nimport warnings\nfrom IPython.display import display, Markdown","key":"j5csFJrZub"},{"type":"output","id":"7RrVZfY5jNfHsai9TxZWw","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mModuleNotFoundError\u001b[39m                       Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[1]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mxarray\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mas\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mxr\u001b[39;00m\n\u001b[32m      2\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mearthaccess\u001b[39;00m\n\u001b[32m      3\u001b[39m \u001b[38;5;28;01mimport\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mboto3\u001b[39;00m\n\n\u001b[31mModuleNotFoundError\u001b[39m: No module named 'xarray'","ename":"ModuleNotFoundError","evalue":"No module named 'xarray'"}],"key":"F02tx4L9HU"}],"key":"z5VVEuuTkU"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"As implied by the dataset’s name, the UCLA reanalysis is only for the Western United States. For this example, we will look over the Tuolumne River Basin in California.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"n9N9FwJAAH"}],"key":"fPEEnEGoty"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"As with the MERRA-2 example workbook, we will be using the dataset DOI to quickly access the data, and looking at the 2020-2021 water year.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gqubva9KLg"}],"key":"NHOIQn6dyn"}],"key":"TsdL4OCqUb"},{"type":"block","kind":"notebook-code","data":{"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"# Define bounding box over the Tuolumne\nbbox = (-119.85, 37.71, -119.1, 38.25)\n\n# Authenticate using Earthdata Login prerequisite files\nauth = earthaccess.login()\n\n# Search for the granule by DOI\nresults = earthaccess.search_data(\n    doi='10.5067/PP7T2GBI52I2',\n    temporal=(\"2020-10-01\", \"2021-09-30\"),\n    bounding_box = bbox\n)","key":"AQ5bmA9YAS"},{"type":"output","id":"w0jrb7YLGF8DzLFo_uoKC","data":[],"key":"YptJVFV5gm"}],"key":"qGpDV90RUz"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Download the files to a tmp folder, and save paths as a list\nfiles = earthaccess.download(results, \"/home/jovyan/tmp/\")\nfiles","key":"tNxlW6uRwq"},{"type":"output","id":"P167Gb-cdvrjJ1CvpotaT","data":[],"key":"VRhsm2KBLK"}],"key":"BLR8J3n2nP"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The four files we downloaded provide reanalysis data for snow water equivalent and snow cover (","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CS8SldMwbf"},{"type":"inlineCode","value":"SWE_SCA_POST","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lbBLvjr6dh"},{"type":"text","value":"), as well as snow depth (","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KjTHEa1FcD"},{"type":"inlineCode","value":"SD_POST","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Hnqsc9SWGz"},{"type":"text","value":"). We have two files for each to correspond to different latitudes (","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PLyjpVMWde"},{"type":"inlineCode","value":"N37","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qfmngNFVaA"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SZQHNYJjiw"},{"type":"inlineCode","value":"N38","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bSaC59NOD3"},{"type":"text","value":" in the file names).","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YyotmP0SDO"}],"key":"GaxOiWcYfM"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We could load these files individually, but Xarray has functionality to load all of them at once with ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"BdEEJzS4zE"},{"type":"inlineCode","value":"xarray.open_mfdataset()","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cKCukwKvYw"},{"type":"text","value":"!","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"okcn2NuH1Y"}],"key":"Zgg4ct94N8"}],"key":"obH6GBlCk6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds = xr.open_mfdataset(files)","key":"pSSC7o6RWP"},{"type":"output","id":"oWybcpFKSxshg2iXzsNBa","data":[],"key":"XiKVRSWoVu"}],"key":"kq69VfvZuj"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds","key":"jG3aBlV8pG"},{"type":"output","id":"lxfxu4C9LcAm5xfbq0T8s","data":[],"key":"MlrUllhjT8"}],"key":"GPF1crG8nl"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Our DataArray has four dimensions: ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"izNfxPFgg1"},{"type":"inlineCode","value":"Day","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ycFcJDUhEW"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uPdp6h8sXD"},{"type":"inlineCode","value":"Stats","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TkshncKXwW"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"E3hErDvbdD"},{"type":"inlineCode","value":"Longitude","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FngiXlfEwX"},{"type":"text","value":", and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yJ80SAC8e1"},{"type":"inlineCode","value":"Latitude","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JvukIf5wg9"},{"type":"text","value":". ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"izXfnGzN9S"},{"type":"inlineCode","value":"Days","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rcgHlTqIZe"},{"type":"text","value":" refers to the number of days after the start of the water year (October 1st), which isn’t very useful on its own. So, let’s change it into a datetime format.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"N9kiuVj3il"}],"key":"bark5dyhov"}],"key":"ToY2dOadi0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import re\nimport pandas as pd\n\n# Find year in file name\nurl = files[0]\ndate_pattern = r'\\d{4}'\n\n# Convert year to start of water year (pd.datetime format)\nWY_start_date = pd.to_datetime(f'{re.search(date_pattern, url).group()}-10-01')","key":"f7Gq4fUn7B"},{"type":"output","id":"OjAJNC7M5q-UD__0-fSRb","data":[],"key":"IxKE5nfU2b"}],"key":"EwZAckCE4a"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Define new coordinates that use dates rather than day numbers\nds.coords['time'] = (\"Day\", pd.date_range(WY_start_date, periods=ds.sizes['Day']))\nds = ds.swap_dims({'Day':'time'})","key":"Up7tbY7me0"},{"type":"output","id":"84bnFughtTemp5a9rSSoh","data":[],"key":"XdpiDnJz70"}],"key":"oo48V8i6EO"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"igaoEK9fxq"},{"type":"inlineCode","value":"Stats","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tpTCGfyyX7"},{"type":"text","value":" coordinate refers to the statistics that are available for each of the variables, but its inputs are numeric, rather than strings. The ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YqtD1XfBvr"},{"type":"inlineCode","value":"stats_dictionary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TeznPrcXb8"},{"type":"text","value":" below outlines the statistics associated with each number, with ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HA9MG1ffFR"},{"type":"inlineCode","value":"25pct","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GLM3JLEqW6"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Bnlf6eN9nT"},{"type":"inlineCode","value":"75pct","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PbqYSe3b0K"},{"type":"text","value":" referring to the 25th-percentile and the 75th-percentile, respectively.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"L1BOQHqAkL"}],"key":"birTnCNK1X"}],"key":"L2285uhLAI"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Make dictionary of statistics\nstats_dictionary = {'mean':0, \n                    'std':1, \n                    'median':2, \n                    '25pct':3, \n                    '75pct':4}\n\n# Choose statistic of interest\nstat = stats_dictionary['mean']","key":"OTomVhukAI"},{"type":"output","id":"xe89XGiZu8qSDHb2nEiQJ","data":[],"key":"Nehz5JVPn9"}],"key":"BAEQ7uR5Zb"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"For this example, we are grabbing the mean daily SWE (","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"smf7RR0chN"},{"type":"inlineCode","value":"SWE_Post","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tumfnCZoaK"},{"type":"text","value":"):","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WkwrpP829L"}],"key":"lSZDdPnBvy"}],"key":"kZbfGY9beC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"mean_daily_swe = ds['SWE_Post'].sel(Stats=stat)","key":"Fbicj031Qp"},{"type":"output","id":"wkoM3kGImubW47fHpTsUG","data":[],"key":"Qc6BM7GkSI"}],"key":"Y1wMeilrYC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"mean_daily_swe","key":"yiSdMgLxPv"},{"type":"output","id":"l9KzwiIvcwQdyYuIpmHji","data":[],"key":"SCfUnWu0J3"}],"key":"AbeurTFY5D"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Looking at the output, we can see that the data now has “Array” and “Chunk” information. This is because the data was lazy-loaded through the dask, given that there is a lot of data stored in each file.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HTc1Ib6WOY"}],"key":"qCGfcYuTlb"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Before we plot the data, we will need to reduce it to our time frequency of interest (monthly, in this case). We will then properly load the data into memory.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FErEV89RLM"}],"key":"NxeOOW0qsT"}],"key":"EThRAup7AR"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Resample the SWE data to a monthly mean\nmean_monthly_swe = mean_daily_swe.resample(time=\"1ME\").mean()","key":"DjMKWfcOge"},{"type":"output","id":"3Iwl0V67zmdhVM60SZ5Up","data":[],"key":"GFLKjDy5yI"}],"key":"Pdtb60eIx8"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Load the monthly mean data into memory\nmean_monthly_swe = mean_monthly_swe.compute()","key":"EeOWdqZgRQ"},{"type":"output","id":"kIElVCnqyLxouj2rU8iE-","data":[],"key":"RQ4UwDwfCM"}],"key":"Y3uJg5mrLK"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Caution","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"G0iElBOHsu"}],"key":"TZqGDHkeSu"},{"type":"text","value":": The above plotting cell can be a bit time-consuming if you are working with a lot of files at once.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"glD8Ted1x3"}],"key":"CuFVwIYizn"}],"key":"FHNSGdcyTH"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Finally, we will make a figure showing the monthly SWE across an entire water year.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"m9WYSEH3Tc"}],"key":"LnBZ65EJMS"}],"key":"YoMnelTHbj"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Define months as strings, for subplot titles\nmonths = ['October', 'November', 'December', 'January',\n          'February', 'March', 'April', 'May',\n          'June', 'July', 'August', 'September']\n\n# Plot the SWE data as monthly means\nfig = mean_monthly_swe.plot.imshow(\n    col='time',\n    col_wrap=4,\n    cmap=\"Blues\",\n    vmin=0,\n    vmax=1,\n)\n\n# Set titles to month\nfor ax, title in zip(fig.axs.flatten(), months):\n    ax.set_title(title, fontsize=12)\n\n# Change colorbar label and label sizes\nfig.cbar.ax.tick_params(labelsize=16)\nfig.cbar.set_label(label='SWE [m]', size=16, weight='bold')","key":"o65z8BC84N"},{"type":"output","id":"MJl1QkhjUOH68f-fNIqDz","data":[],"key":"o0eyN5YwVW"}],"key":"St6PRs0OrL"}],"key":"ExdX9FHSDY"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Snow Modeling","url":"/notebooks/snowmodeling-tutorial-pt1","group":"Analysis and Machine Learning"},"next":{"title":"MERRA-2","url":"/notebooks/merra2-data-access","group":"Analysis and Machine Learning"}}},"domain":"http://localhost:3000"}